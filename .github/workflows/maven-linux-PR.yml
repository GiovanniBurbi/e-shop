name: Java CI with Maven and Docker in Linux

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      workdir: com.apt.project.eshop
    strategy:
      # test against several Java versions:
      matrix:
        include:
          - java: 8
            additional-maven-args: >
              -Pcoveralls
              -DrepoToken=$COVERALLS_REPO_TOKEN
              -DpullRequest=${{ github.event.pull_request.number }}
          - java: 11
            additional-maven-args: >
              -Pjacoco sonar:sonar
              -Dsonar.organization=giovanniburbi-github
              -Dsonar.host.url=https://sonarcloud.io
              -Dsonar.projectKey=GiovanniBurbi_e-shop
      # prevent cancellation of other jobs running in parallel
      # when one of these fails 
      fail-fast: false

    name: Build with Java ${{ matrix.java }} on Linux
    steps:
    - uses: actions/checkout@v2
      with:
        # Shallow clones should be disabled for a better relevancy of SonarQube analysis 
        fetch-depth: 0
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: | 
          ~/.m2
          ~/.sonar/cache
        key: ${{ runner.os }}-m2-jdk${{ matrix.java }}-${{ hashFiles('**/pom.xml', '**/*.yml') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Build with Maven
      run: xvfb-run mvn verify ${{ matrix.additional-maven-args }}
      working-directory: ${{ env.workdir }}
      env: 
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Generate JUnit Report
      run: mvn surefire-report:report-only site:site -DgenerateReports=false
      working-directory: ${{ env.workdir }}
      if: ${{ failure() }}
    - name: Archive JUnit Report
      uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: surefire-report-jdk-${{ matrix.java }}
        path: '**/target/site'
      # Run PIT only if previous steps are successfully executed
    - name: Run PIT 
      id: pit
      continue-on-error: true
      run: mvn org.pitest:pitest-maven:mutationCoverage
      working-directory: ${{ env.workdir }}
      # Archive PIT report only if Run PIT fails
    - name: Archive PIT Report
      uses: actions/upload-artifact@v2
      if: ${{ steps.pit.outcome == 'failure' }}
      with:
        name: pit-report-jdk-${{ matrix.java }}
        path: '**/target/pit-reports'